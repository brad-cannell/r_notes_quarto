{
  "hash": "f6c2f6ed58ae62df81b7373aa7108d0e",
  "result": {
    "engine": "knitr",
    "markdown": "# Stata {#sec-stata}\n\nWhile working on the L2C main outcomes paper, I wanted to double check some of my results in Stata. It turns out you can run Stata code directly from within R; albeit with some limitations. This note needs some work, but the basics are here.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nThe first thing we need to do is load the `RStata` package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(RStata) # For Stata\n```\n:::\n\n\n\n\nThen, we need to tell R where to find Stata on our local computer and which version of Stata we are using. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# For Stata\noptions(\"RStata.StataPath\" = \"/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp\")\noptions(\"RStata.StataVersion\" = 18)\n```\n:::\n\n\n\n\nThen, we can run Stata directly in R code chunks in RStudio. For example, let's calculate the frequency and percentage of observations of each cylinder type in the `mtcars` data set.\n\n1. Pass a Stata command (as a character string) -- or a do file -- to the `src` argument of the `stata()` function.\n2. Pass the name of a data frame that currently exists in the R global environment to the `data.in` argument of the `stata()` function.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstata(\n  src = \"tabulate cyl\",\n  data.in = mtcars\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n. tabulate cyl\n\n        cyl |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          4 |         11       34.38       34.38\n          6 |          7       21.88       56.25\n          8 |         14       43.75      100.00\n------------+-----------------------------------\n      Total |         32      100.00\n```\n\n\n:::\n:::\n\n\n\n\nThis works, but we can't use these estimates directly. However, we can save the estimation results and use them in further operations. See this [SO post](https://stackoverflow.com/questions/57881623/how-to-capture-rstata-package-output-for-subsequent-processing-in-r) for more discussion. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a temp file to save the results to.\n# I don't want to create a dta file on my desktop every time I build this book.\ntmpdir <- tempfile()\ndir.create(tmpdir, showWarnings = FALSE, recursive = TRUE)\ntempfile <- file.path(tmpdir, \"stata_out.dta\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstata_tabulate_results <- stata(\n  paste0( # Using past to inject the temp file. Normally this isn't necessary\n    '\n    tabulate cyl, matcell(x)\n    clear\n    svmat x\n    ',\n    'save ', tempfile\n  ),\n  data.in = mtcars,\n  data.out = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n. \n.     tabulate cyl, matcell(x)\n\n        cyl |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          4 |         11       34.38       34.38\n          6 |          7       21.88       56.25\n          8 |         14       43.75      100.00\n------------+-----------------------------------\n      Total |         32      100.00\n.     clear\n.     svmat x\nnumber of observations will be reset to 3\nPress any key to continue, or Break to abort\nNumber of observations (_N) was 0, now 3.\n.     save /var/folders/_6/rzs6b7fd09d1_4sw4vyrw8900000gs/T//Rtmp1JXCEK/file144\n> d11c6609ce/stata_out.dta\nfile\n    /var/folders/_6/rzs6b7fd09d1_4sw4vyrw8900000gs/T//Rtmp1JXCEK/file144d11c6\n    > 609ce/stata_out.dta saved\n```\n\n\n:::\n:::\n\n\n\n\nWithout the tempfile code, it would look like this.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstata_tabulate_results <- stata(\n  '\n  tabulate cyl, matcell(x)\n  clear\n  svmat x\n  save \"/Users/bradcannell/Desktop/t.dta\"\n  ',\n  data.in = mtcars,\n  data.out = TRUE\n)\n```\n:::\n\n\n\n\nI still have a lot to learn about saving the results from Stata commands. In the future, we may want to add notes from \"/Users/bradcannell/Library/CloudStorage/Dropbox/Stata/Notes/Example Do Files/Matrix and Saved Results.do\"\n\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}