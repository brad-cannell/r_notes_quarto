[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Notes",
    "section": "",
    "text": "Introduction\nWelcome to Brad Cannell‚Äôs R Notes!\nThis repository is for a Quarto version Brad Cannell‚Äôs R Notes. This repository is primarily intended to be helpful to me, but even better if you find it useful too! This version of my R Notes replaces the previous Bookdown version.\nWhy am I doing this (as opposed to just keeping notes locally)?",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#organization",
    "href": "index.html#organization",
    "title": "R Notes",
    "section": "Organization",
    "text": "Organization\nThese notes are loosely organized into the following parts:\n\nProgramming: Notes about optimizing code, writing functions, creating packages, and repeated operations.\nData Simulation: Notes about simulating data.\nWorking with external files: Notes about things like data transfer, web scraping, PDF scraping, and using Officer to scrape Microsoft Office documents.\nData management: Notes about manipulating/transforming/filtering data that is already in R.\nAnalysis: Notes about creating numerical summaries of data.\nData visualization: Notes about graphical summaries of data. A lot of this will be about ggplot.\nPresenting results: Notes about making numerical and graphical summaries accessible outside of R. This can include webpages, static dashboards, PDF documents, Microsoft Office documents, etc. This does not include Shiny apps.\nCollaboration: Notes about collaborative coding. This is primarily notes on using Git and GitHub.\nShiny: I am no longer keeping notes about Shiny here. Shiny has it‚Äôs own notebook. https://brad-cannell.github.io/shiny_notes_quarto/\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "chapters/rstudio/rstudio.html",
    "href": "chapters/rstudio/rstudio.html",
    "title": "1¬† RStudio",
    "section": "",
    "text": "1.1 Find and Replace Tool\nNotes on using RStudio‚Äôs Find and Replace tool. This can be a real time saver!",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>RStudio</span>"
    ]
  },
  {
    "objectID": "chapters/rstudio/rstudio.html#find-and-replace-tool",
    "href": "chapters/rstudio/rstudio.html#find-and-replace-tool",
    "title": "1¬† RStudio",
    "section": "",
    "text": "1.1.1 Regular Expressions\nThese notes should be specifically about using Regular Expressions in RStudio‚Äôs Find and Replace tool. See Chapter 2 for notes about regular expressions in general.\n\n1.1.1.1 Substituions\nI was working on making updates to Intro to R. While converting Rmd documents to Qmd documents, I was looking for a way to use the find and replace tool to convert the code chunk options from their knitr style (i.e., {eval=FALSE}) to the Quarto style (i.e., #| eval: false). Using this SO post, I did some experimenting in regex101 and found a solution. Here it is:\nFind code (with leading space): eval=FALSE}\nReplace code: }\\n#| eval: false\\n\nIt turns out that the substitution part is pretty straightforward in this case, but I think that stack overflow post will be useful for more complicated cases when I have to use capture groups as well.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>RStudio</span>"
    ]
  },
  {
    "objectID": "chapters/regex/regex.html",
    "href": "chapters/regex/regex.html",
    "title": "2¬† Regular Expressions",
    "section": "",
    "text": "2.1 Useful websites",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Regular Expressions</span>"
    ]
  },
  {
    "objectID": "chapters/regex/regex.html#useful-websites",
    "href": "chapters/regex/regex.html#useful-websites",
    "title": "2¬† Regular Expressions",
    "section": "",
    "text": "Regular Expressions 101",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Regular Expressions</span>"
    ]
  },
  {
    "objectID": "chapters/programming_with_functions/programming_with_functions.html",
    "href": "chapters/programming_with_functions/programming_with_functions.html",
    "title": "3¬† Programming with functions",
    "section": "",
    "text": "3.1 ‚≠êÔ∏è Overview\nThe basic question I asked while developing tabler was how do you pass a function as an argument to another function.\nThis chapter still needs a lot of work.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Programming with functions</span>"
    ]
  },
  {
    "objectID": "chapters/programming_with_functions/programming_with_functions.html#useful-websites",
    "href": "chapters/programming_with_functions/programming_with_functions.html#useful-websites",
    "title": "3¬† Programming with functions",
    "section": "3.2 üåé Useful websites",
    "text": "3.2 üåé Useful websites\n\nAdvanced R: Functionals",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Programming with functions</span>"
    ]
  },
  {
    "objectID": "chapters/programming_with_functions/programming_with_functions.html#load-packages",
    "href": "chapters/programming_with_functions/programming_with_functions.html#load-packages",
    "title": "3¬† Programming with functions",
    "section": "3.3 üì¶ Load packages",
    "text": "3.3 üì¶ Load packages\n\nlibrary(dplyr, warn.conflicts = FALSE)",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Programming with functions</span>"
    ]
  },
  {
    "objectID": "chapters/programming_with_functions/programming_with_functions.html#simulate-data",
    "href": "chapters/programming_with_functions/programming_with_functions.html#simulate-data",
    "title": "3¬† Programming with functions",
    "section": "3.4 üî¢ Simulate data",
    "text": "3.4 üî¢ Simulate data\nHere we simulate a small data set that is intended to be representative of data from a research study.\n\nset.seed(123)\nstudy &lt;- tibble(\n  id     = as.character(seq(1001, 1020, 1)),\n  sex    = factor(sample(c(\"Female\", \"Male\"), 20, TRUE)),\n  date   = sample(seq.Date(as.Date(\"2021-09-15\"), as.Date(\"2021-10-26\"), \"day\"), 20, TRUE),\n  days   = sample(1L:21L, 20L, TRUE),\n  height = rnorm(20, 71, 10)\n)\n\n# Add missing values for testing\nstudy$id[3] &lt;- NA\nstudy$sex[4] &lt;- NA\nstudy$date[5] &lt;- NA\nstudy$days[6] &lt;- NA\nstudy$height[7] &lt;- NA",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Programming with functions</span>"
    ]
  },
  {
    "objectID": "chapters/programming_with_functions/programming_with_functions.html#examples",
    "href": "chapters/programming_with_functions/programming_with_functions.html#examples",
    "title": "3¬† Programming with functions",
    "section": "3.5 Examples",
    "text": "3.5 Examples\nThis needs to be cleaned up. I‚Äôm just in a rush.\n\n# Function passed to a function?\nfn_number &lt;- function(x) {\n  x\n}\n\nfn_number(3)\n\n[1] 3\n\nfn_sum &lt;- function(n, fn) {\n  1 + fn(n)\n}\n\nfn_sum(3, fn_number)\n\n[1] 4\n\n\n\nlapply2 &lt;- function(x, f, ...) {\n  out &lt;- vector(\"list\", length(x))\n  for (i in seq_along(x)) {\n    out[[i]] &lt;- f(x[[i]], ...)\n  }\n  out\n}\n\nlapply2(select(study, days, height), mean)\n\n[[1]]\n[1] NA\n\n[[2]]\n[1] NA\n\n\n\nlapply2(select(study, days, height), mean, na.rm = TRUE)\n\n[[1]]\n[1] 12.05263\n\n[[2]]\n[1] 72.33294\n\n\n\n# How do I make this work like purrr, dplyr, etc.\nlapply2(select(study, days, height), ~ mean(.x, na.rm = TRUE))\n\nError in f(x[[i]], ...): could not find function \"f\"",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Programming with functions</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html",
    "href": "chapters/packages_quick_start/packages_quick_start.html",
    "title": "4¬† Packages: Quick Start",
    "section": "",
    "text": "4.1 ‚≠êÔ∏è Overview\nThis chapter is my quick start guide for creating packages. I‚Äôm going to walk through the process I used to create the codebook package, plus add some extra notes that have been helpful along the way when creating other packages.\nThis is not meant to be a comprehensive guide to creating packages. Hadley Wickham and Jenny Bryan‚Äôs R Packages book already exists for that purpose. This is supposed to just be a quick overview and some notes to remember in the future.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#useful-websites",
    "href": "chapters/packages_quick_start/packages_quick_start.html#useful-websites",
    "title": "4¬† Packages: Quick Start",
    "section": "4.2 üåé Useful websites",
    "text": "4.2 üåé Useful websites\n\nHadley Wickham and Jenny Bryan‚Äôs R Packages book\n\ndevtools package\n\nusethis package",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#quick-process",
    "href": "chapters/packages_quick_start/packages_quick_start.html#quick-process",
    "title": "4¬† Packages: Quick Start",
    "section": "4.3 Quick Process",
    "text": "4.3 Quick Process\n\nCreate new project/package directory with usethis::create_package(). Restart.\nAdd a NOTES file.\nAdd license with usethis::use_mit_license().\nModify the description file.\nAdd README with usethis::use_readme_rmd() and devtools::build_readme().\nAdd Git with usethis::use_git(). Restart.\nConnect to GitHub with usethis::use_github().\nAdd functions to the package.\nCreating unit tests.\nCreating vignettes.\nCompleting a version of the package and (optionally) submitting to CRAN.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#before-creating-the-package",
    "href": "chapters/packages_quick_start/packages_quick_start.html#before-creating-the-package",
    "title": "4¬† Packages: Quick Start",
    "section": "4.4 Before creating the package",
    "text": "4.4 Before creating the package\nGive the package a new (Hadley‚Äôs naming strategies)",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#create",
    "href": "chapters/packages_quick_start/packages_quick_start.html#create",
    "title": "4¬† Packages: Quick Start",
    "section": "4.5 Step 1: Create the package project",
    "text": "4.5 Step 1: Create the package project\nCall create_package() to initialize a new package in a directory on your computer (and create the directory, if necessary).\n\nusethis::create_package(\"/Users/bradcannell/Dropbox/R/Packages/codebook\")\n\nThe function will do all of this:",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#notes",
    "href": "chapters/packages_quick_start/packages_quick_start.html#notes",
    "title": "4¬† Packages: Quick Start",
    "section": "4.6 Step 2: Add a NOTES file",
    "text": "4.6 Step 2: Add a NOTES file\nThe R Packages book doesn‚Äôt mention creating a NOTES file, but it‚Äôs something I like to do. I use the notes file to help me remember little things related to the development of the package that aren‚Äôt meant to be shared publicly.\n\nCreate a new text file, add the following template to the top of the file, and fill it out appropriately.\n\n\n# =============================================================================\n# codebook notes\n# =============================================================================\n\nUse NOTES for notes, but not tasks. Why or how, but not what.\n\n...\n\n\nSubmission Notes:\n-----------------\n* Useful website: http://r-pkgs.had.co.nz/release.html\n* Update README before submission. It should roughly match the examples in the roxygen documentation.\n  - Update README.Rmd, not README.md.\n  - Knit README.Rmd after making changes. This will automatically update README.md\n* Update vignettes using devtools::document()\n* Update news.md. Here's dplyr's (https://raw.githubusercontent.com/tidyverse/dplyr/master/NEWS.md)\n* If you were on a development branch, merge with main branch.\n* Use devtools::check()\n* Use devtools::check_win_devel() to test the package on Windows\n* Update cran-comments.\n  - If this is a resubmission, add a bulleted list of changes made under ## Resubmission.\n* Submit with devtools::release()\n* After the package is accepted, do this stuff: http://r-pkgs.had.co.nz/release.html#post-release\n\n\nSave as NOTES\nAdd to gitignore.\n\n\nusethis::use_git_ignore(\"NOTES\")\n\n\nAdd to buildignore.\n\n\nusethis::use_build_ignore(\"NOTES\")",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#license",
    "href": "chapters/packages_quick_start/packages_quick_start.html#license",
    "title": "4¬† Packages: Quick Start",
    "section": "4.7 Step 3: Add license",
    "text": "4.7 Step 3: Add license\n\nusethis::use_mit_license()\n\nThe function will do all of this:\n\n\n\n\n\n\n\n\n\nYou will still need to open the new LICENSE file and change COPYRIGHT HOLDER: to ‚ÄúBrad Cannell‚Äù. You can also look in the templates folder for more elaborate licenses.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#modify",
    "href": "chapters/packages_quick_start/packages_quick_start.html#modify",
    "title": "4¬† Packages: Quick Start",
    "section": "4.8 Step 4: Modify the description file",
    "text": "4.8 Step 4: Modify the description file\nOpen the description file and make some changes.\nHere is a minimal example from codebook:\n\nPackage: codebook\nTitle: Create Codebooks From Data Frames\nVersion: 0.0.0.9000\nAuthors@R: person(\"Brad\", \"Cannell\", email = \"brad.cannell@gmail.com\",\n  role = c(\"aut\", \"cre\", \"cph\"))\nMaintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt;\nDescription: The codebook package is intended to make it easy for users to \n  create codebooks (i.e. data dictionaries) directly from data frame.\nLicense: MIT + file LICENSE\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.1.2\n\nHere is a slightly more elaborate example from meantables:\n\nPackage: meantables\nType: Package\nTitle: Make Quick Descriptive Tables for Continuous Variables\nDescription: Quickly make tables of descriptive statistics (i.e., counts, \n    means, confidence intervals) for continuous variables. This \n    package is designed to work in a Tidyverse pipeline, and consideration\n    has been given to get results from R to 'Microsoft Word' ¬Æ with minimal pain.\nVersion: 0.1.2\nAuthors@R: person(\"Brad\", \"Cannell\", email = \"brad.cannell@gmail.com\",\n  role = c(\"aut\", \"cre\", \"cph\"))\nMaintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt;\nLicense: MIT + file LICENSE\nEncoding: UTF-8\nSuggests: \n    knitr,\n    rmarkdown,\n    testthat\nVignetteBuilder: knitr\nRoxygenNote: 7.1.2\nImports: \n    dplyr,\n    tibble,\n    rlang,\n    stringr\n\n\nRemember that Title Case is required for the Title\nDo Not use library(package) in R scripts - instead add package dependencies to the Imports or Remotes field in the DESCRIPTION. Do use library(package) in vignette .Rmd files, and DO NOT add these package dependencies to the DESCRIPTION\nIf we already added R scripts to the package directory, we need to open them now and make sure to remove all the library() functions.\nWhen adding CRAN packages to imports, you must first make sure they are installed.\nInstructions for installing dependencies from sources other than CRAN are given here.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#readme",
    "href": "chapters/packages_quick_start/packages_quick_start.html#readme",
    "title": "4¬† Packages: Quick Start",
    "section": "4.9 Step 5: Add README",
    "text": "4.9 Step 5: Add README\nIn R Packages, Chapter 2: The Whole Game, Hadley and Jenny basically create all the package code before connecting their project to their remote repository on GitHub. I actually like to connect my project to GitHub before I write any code. I do this for several reasons, one of which is that I can start using GitHub‚Äôs issues and project boards right away to take notes and plan package development.\nAnd, I like to create the README file before I initialize Git or connect with GitHub. That‚Äôs what we will do in this step.\n\nusethis::use_readme_rmd()\n\n\nI generally just copy the Description section from the DESCRIPTION file and use it replace the ‚ÄúThe goal of codebook is to ‚Ä¶‚Äù sentence that that use_readme_rmd() creates by default.\nComment out all of the code chunks that use_readme_rmd() creates by default.\nAdd installation instructions to README. Although we haven‚Äôt created the repository yet, we know what it‚Äôs going to be called.\n\nThe README file already contains the following lines:\n\n\n\n\n\n\n\n\n\nWe just need to replace it with:\nMake sure to set the eval=FALSE code chunk option.\n\n# install.packages(\"devtools\")\ndevtools::install_github(\"brad-cannell/codebook\")\n\n\nJust replace ‚Äúcodebook‚Äù in the path above with the name of the repository for the package project you are currently working on.\nYou can leave everything else as-is for now.\n\nRender README\nDon‚Äôt forget to render it to make README.md! The pre-commit hook should remind you if you try to commit README.Rmd, but not README.md, and also when README.md appears to be out-of-date.\nThe very best way to render README.Rmd is with build_readme(), because it takes care to render with the most current version of your package, i.e.¬†it installs a temporary copy from the current source.\n\ndevtools::build_readme()",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#git",
    "href": "chapters/packages_quick_start/packages_quick_start.html#git",
    "title": "4¬† Packages: Quick Start",
    "section": "4.10 Step 6: Add Git",
    "text": "4.10 Step 6: Add Git\n\nusethis::use_git()\n\n\nGo ahead and commit all the files in the directory so far, and agree to restart R.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#github",
    "href": "chapters/packages_quick_start/packages_quick_start.html#github",
    "title": "4¬† Packages: Quick Start",
    "section": "4.11 Step 7: Connect to GitHub",
    "text": "4.11 Step 7: Connect to GitHub\nCaution\nSo far, using this method will add the repo to my personal account (mbcann01), not to my organization. You can either:\n\nCreate the repo manually on GitHub first, then follow GitHub‚Äôs instructions for syncing.\nAfter you create the repo on mbcann01, transfer ownership to brad-cannell in the Settings menu.\n\n\nusethis::use_github()\n\nThe function will do all of this:\n\n\n\n\n\n\n\n\n\n\nGo ahead and agree to commit.\n\n\n4.11.1 Setting up GitHub\nI added a page on the templates package wiki about setting up the issue tags, planner project boards, etc. That seems more durable writing them here.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#package-functions",
    "href": "chapters/packages_quick_start/packages_quick_start.html#package-functions",
    "title": "4¬† Packages: Quick Start",
    "section": "4.12 Step 8: Adding content to the package",
    "text": "4.12 Step 8: Adding content to the package\nAt this point, we have an (empty) working package, which can be downloaded from our GitHub repository. Now, we just need to add the functions, data, and documentation that will make it actually worth using.\n\n4.12.1 Working with R scripts\n\nDon‚Äôt write or alter your functions in the console as you would in a typical interactive session. If you do, it‚Äôs easy for the version you‚Äôre using interactively and the version you are actually including in your package to get out of sync. Instead, load the package.\nClick the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L\n\n\n\n4.12.2 Adding help pages to functions\nHelp pages are contained in .Rd files saved in the man folder. It‚Äôs best practice to use roxygen with your script files to automatically generate the .Rd files. Doing so helps to keep your scripts and your help pages in sync.\nTo use roxygen:\n\nMake sure the R script you want to document is active.\nClick Project Options &gt; Build Tools &gt; Generate documentation with Roxygen\nPlace your cursor in the function you want to document\nInsert a Roxygen skeleton with the keyboard shortcut cmd + alt + shift + R\nAfter you‚Äôve filled in the skeleton click Build &gt; More &gt; Document, or use the keyboard shortcut shift + cmd + D. RStudio will then automatically generate the help pages in your man folder.\nClick the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L\nCheck your help page by typing ?function_name in the console.\n\n\n\n4.12.3 Example roxygen header\n\n#' @title Compact Table of Summary Statistics\n#'\n#' @description  Based on Stata's \"tabstat\" command. \"tabstat displays summary\n#'  statistics for a series of numeric variables in one table.  It allows you\n#'  to specify the list of statistics to be displayed.  Statistics can be\n#'  calculated (conditioned on) another variable.  tabstat allows substantial\n#'  flexibility in terms of the statistics presented and the format of the\n#'  table\" (Stata, 2016).\n#'\n#' @param x A continuous variable.\n#' @param digits Rounds the values returned to the specified number of decimal\n#'  places (default 3).\n#' @param stats Return specified statistics. Options include:\n#'  \\describe{\n#'    \\item{n}{Count of nonmissing values of x}\n#'    \\item{nmiss}{Count of missing values of x}\n#'    \\item{ci}{95 percent confidence interval for the mean of x}\n#'    \\item{sum}{Sum of x}\n#'    \\item{max}{Maximum value of x}\n#'    \\item{min}{Minimum value of x}\n#'    \\item{range}{(Maximum value of x) - (minimum value of x)}\n#'    \\item{sd}{Standard deviation of x}\n#'    \\item{var}{Variance of x}\n#'    \\item{cv}{Coefficient of variation (sd / mean) of x}\n#'    \\item{sem}{Standard error of the mean of x}\n#'    \\item{skew}{Skewness of x}\n#'    \\item{kurt}{Kurtosis of x}\n#'    \\item{p1}{1st percentile of x}\n#'    \\item{p5}{5th percentile of x}\n#'    \\item{p10}{10th percentile of x}\n#'    \\item{p25}{25th percentile of x}\n#'    \\item{p50}{Median value of x}\n#'    \\item{median}{Median value of x}\n#'    \\item{p75}{75th percentile of x}\n#'    \\item{p90}{90th percentile of x}\n#'    \\item{p95}{95th percentile of x}\n#'    \\item{p99}{99th percentile of x}\n#'    \\item{iqr}{Interquartile range (p75 - p25)}\n#'    \\item{q}{Equivalent to specifying p25 p50 p75}\n#'  }\n#'\n#' @return A data frame. By default, the data frame contains the variable name\n#'  and mean.\n#' @export\n#'\n#' @references Stata 14 help for tabstat\n#'  \\url{http://www.stata.com/help.cgi?tabstat}\n#'\n#' @examples\n#' data(mtcars)\n#'\n#' # Single univariate analysis with Defaults\n#' tabstat(mtcars$mpg)\n#'\n#' # Single univariate analysis with all stats\n#' tabstat(mtcars$mpg, stats = c(\"n\", \"nmiss\", \"ci\", \"sum\", \"max\", \"min\",\n#' \"range\", \"sd\", \"var\", \"cv\", \"sem\", \"skew\", \"kurt\", \"p1\", \"p5\", \"p10\",\n#' \"p25\", \"p50\", \"median\", \"p75\", \"p90\", \"p95\", \"p99\", \"iqr\", \"q\"))\n\n\n\n4.12.4 Don‚Äôt run the examples\nIf you don‚Äôt want the examples to actually run, You can surround the example code with like this:\n\n#' @examples\n#' \\dontrun{\n#' library(dplyr)\n#' library(meantables)\n#'\n#' data(mtcars)\n#'\n#' # Overall mean table with defaults\n#'\n#' mtcars %&gt;%\n#'   mean_table(mpg)\n#'\n#' # A tibble: 1 x 9\n#'   response_var     n  mean    sd   sem   lcl   ucl   min   max\n#'   &lt;chr&gt;        &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#' 1 mpg             32  20.1  6.03  1.07  17.9  22.3  10.4  33.9\n#' }\n\n\n\n4.12.5 Keyboard shortcut for inserting roxygen #‚Äô comment\nThere doesn‚Äôt appear to be a keyboard shortcut, but this StackOverflow post shows a good method for using RStudio‚Äôs find and replace.\n\n\n4.12.6 Simulating data\nThe explanation in the R Packages book is good, short, and easy to follow. As explained in there, the code to create and/or clean the data will go in the data-raw directory and the data will eventually go in the data/ directory.\nFor the codebook package, I wanted to simulate some really simple data that could be used for package examples. Here‚Äôs how I did it.\nI started by running usethis::use_data_raw(\"study\"). Among other things, this creates the R script to be used to simulate the study data. Here is the header for the study data.\n\n# =============================================================================\n# Study data\n# This is the code to create the study data - a simulated data set that can be\n# used to demonstrate how to use the codebook package.\n# Created: 2022-04-04\n# Brad Cannell\n# =============================================================================\n\n# Insert simulation code here...\n\n\n# Add the simulated data to the data directory.\nusethis::use_data(study, overwrite = TRUE)\n\n\n\n4.12.7 Documenting data\n\nObjects in data/ are always effectively exported (they use a slightly different mechanism than NAMESPACE but the details are not important). This means that they must be documented. Documenting data is like documenting a function with a few minor differences. Instead of documenting the data directly, you document the name of the dataset and save it in R/.1\n\nFor example, the roxygen2 block used to document the study data in the codebook package is saved as R/data.R and looks something like this:\n\n#' Simulated study data.\n#'\n#' This is the code to create the study data - a simulated data set that can be\n#' used to demonstrate how to use the codebook package.\n#'\n#' @format A data frame with 20 rows and 4 variables:\n#' \\describe{\n#'   \\item{id}{participant id}\n#'   \\item{gender}{participant gender, female/male}\n#'   \\item{date}{date of enrollment}\n#'   \\item{height}{participant height, in inches}\n#' }\n\"study\"\n\n\n‚Äú@format gives an overview of the dataset. For data frames, you should include a definition list that describes each variable. It‚Äôs usually a good idea to describe variables‚Äô units here.‚Äù1\n‚ÄúNeverexport? a data set.‚Äù1\nThe file is save as R/data.R.\n\nClick here to view the documentation for ggplot‚Äôs diamonds data.\n\n\n4.12.8 Documenting Package\nYou can use roxygen to provide a help page for your package as a whole. As described in section 10.6 of R Packages,1\n\nYou can use roxygen to provide a help page for your package as a whole. This is accessed with package?foo, and can be used to describe the most important components of your package. It‚Äôs a useful supplement to vignettes, as described in the next chapter.\n\n\nThere‚Äôs no object that corresponds to a package, so you need to document NULL, and then manually label it with @docType package and @name &lt;package-name&gt;. This is also an excellent place to use the @section tag to divide up page into useful categories.\n\n\nI usually put this documentation in a file called &lt;package-name&gt;.R. It‚Äôs also a good place to put the package level import statements that you‚Äôll learn about in imports.\n\n\n#' foo: A package for computating the notorious bar statistic\n#'\n#' The foo package provides three categories of important functions:\n#' foo, bar and baz.\n#' \n#' @section Foo functions:\n#' The foo functions ...\n#'\n#' @docType package\n#' @name foo\nNULL",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#testing",
    "href": "chapters/packages_quick_start/packages_quick_start.html#testing",
    "title": "4¬† Packages: Quick Start",
    "section": "4.13 Step 9: Creating unit tests",
    "text": "4.13 Step 9: Creating unit tests\nTesting is an important part of programming. For detailed information on testing see the appropriate testing chapter in R Packages.1\nGet started with devtools::use_testthat().\n\nCreate test file. Must be in tests/testhat. File name should start with test_ and the function name. For example, test_check_catvars.\nModify your code or tests\nTest your package with Ctrl/Cmd + Shift + T or devtools::test().\nRepeat until all tests pass.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#vignettes",
    "href": "chapters/packages_quick_start/packages_quick_start.html#vignettes",
    "title": "4¬† Packages: Quick Start",
    "section": "4.14 Step 10: Vignettes",
    "text": "4.14 Step 10: Vignettes\nThere are some great vignette resources on the internet:\n\nChapter on vignettes in Hadley‚Äôs Package book\nLeisch‚Äôs creating R packages tutorial\nFlight‚Äôs article on creating an analysis as a package and vignette\n\n\n4.14.1 To create a vignette:\n\nrun usethis::use_vignette(\"my-vignette\")\nOpen vignettes/my-vignette.Rmd\nCreate the vignette\nUnlike R scripts, install and load packages directly in the vignettes.\nKnit the vignette - The default action will be to create a version of the vignette that can be viewed in RStudio. However, devtools::install_github() (and friends) will not build vignettes by default because they‚Äôre time consuming and may require additional packages. So, in order to be able to view the vignette in RStudio, you must use vignettes = TRUE, e.g., devtools::install_github(‚Äúbrad-cannell/bfuncs‚Äù, build_vignettes = TRUE) instead.\nUse devtools::build_vignettes() to create an html version of the vignette in inst/doc that you can provide a link to on your Github README page. By default, these folders will be added to .gitignore. Remove them from .gitignore to be able to view/use them on Github. Create a rawgit version of the html vignette file, and providea link to it on README.\nuse use devtools::build() to create a package bundle with the vignettes included. RStudio‚Äôs ‚ÄúBuild & reload‚Äù does not build vignettes to save time.\nWhen you add or update vignettes, push to Github again.\n\n\n\n4.14.2 Vignette Notes:\nThis builds the vignettes, and is probably fine for a regular package of functions. However, when using packages as a means for reproducible, self-contained analysis projects, the vignettes have greater importance, and by default are not easily accessible.\nNeed to find a way to make the vignettes more ‚Äúfront and center‚Äù\n\nCreate a help page for the entire package that includes links to the vignettes?\nInclude links to the README.md file and upload to GitHub (with the data sets excluded)?\nRemember to use system.file() when reading in data inside a code chunk. If you have trouble getting it to work, try build & reload.\nTo save a data frame to data/ inside a vignette, you can use the rprojroot package. use rprojroot::find_root(\"DESCRIPTION\")\n\n\n\n4.14.3 Pkgdown\nI haven‚Äôt tried the pkgdown package yet, but I think it is essentially a collection supercharged vignettes for your package. I‚Äôd like to try it soon.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#cran",
    "href": "chapters/packages_quick_start/packages_quick_start.html#cran",
    "title": "4¬† Packages: Quick Start",
    "section": "4.15 Submitting to CRAN",
    "text": "4.15 Submitting to CRAN\nYou can also do this stuff when you complete a ‚Äúversion‚Äù of the package even if you aren‚Äôt submitting it to CRAN.\nUseful website: http://r-pkgs.had.co.nz/release.html\n\nIf the version number is set to a development version (e.g., .9000), change it to a number that meets the CRAN requirements (i.e., x.x.x)\n\nMake this change in Description and in News.md.\n\nMake sure you using the most updated code before checks. devtools::load_all() and devtools::install()\nUpdate README before submission. It should roughly match the examples in the R Packages book.\n\nUpdate README.Rmd, not README.md.\n\nKnit README.Rmd after making changes. This will automatically update README.md\n\nUpdate documentation/vignettes using devtools::document()\nUpdate news.md. Here‚Äôs dplyr‚Äôs: https://raw.githubusercontent.com/tidyverse/dplyr/master/NEWS.md\n\nHere‚Äôs the news.md section from R Packages: https://r-pkgs.org/other-markdown.html#news\nRemember to add news.md to buildignore. usethis::use_build_ignore(\"news.md\")\nHere‚Äôs a basic news.md from freqtables:\n\n\n# freqtables (development version)\n\n# freqtables 0.1.1\n\n* Add an informative error for user if they forget to pass a data frame to freq_table() (#29)\n\n# freqtables 0.1.0\n\n* First release on CRAN\n\nIf you were on a development branch, merge with main branch.\nUse devtools::check()\nUse devtools::check_win_devel() to test the package on Windows\nUse devtools::check_rhub()\nIf you don‚Äôt plan to submit to CRAN, this is probably a good time to use devtools::install() to re-build and install the package locally.\nUpdate cran-comments.\n\n\nRemember to add news.md to buildignore usethis::use_build_ignore(\"cran-comments.md\") if you haven‚Äôt already.\nIf this is a resubmission, add a bulleted list of changes made under ## Resubmission.\nHere is a link to the cran-comments section of R Packages: https://r-pkgs.org/release.html#sec-release-process\nHere‚Äôs a basic cran-comments.md from freqtables:\n\n## Test environments\n* local OS X install, R 4.1.3\n* Ubuntu Linux 20.04.1 LTS, R-release, GCC\n* win-builder (devel and release)\n\n## R CMD check results\nThere were no ERRORs, WARNINGs or NOTEs\n\n## Downstream dependencies\nThere are currently no downstream dependencies for this package.\n\nSubmit with devtools::release()\n\nAfter the package is accepted, do this stuff: http://r-pkgs.had.co.nz/release.html#post-release\n\nIf you use GitHub, go to the repository release page. Create a new release with tag version v1.2.3 (i.e.¬†‚Äúv‚Äù followed by the version of your package). Copy and paste the contents of the relevant NEWS.md section into the release notes.\nAdd the .9000 suffix to the Version field in the DESCRIPTION to indicate that this is a development version. Create a new heading in NEWS.md and commit the changes.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#package-evolution",
    "href": "chapters/packages_quick_start/packages_quick_start.html#package-evolution",
    "title": "4¬† Packages: Quick Start",
    "section": "4.16 Package evolution",
    "text": "4.16 Package evolution\nHere are some good pages on maintaining and evolving packages over time.\n\nrOpenSci Packages: Development, Maintenance, and Peer Review. Chapter 15: Package evolution - changing stuff in your package\nThe lifecycle package",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#other-random-notes",
    "href": "chapters/packages_quick_start/packages_quick_start.html#other-random-notes",
    "title": "4¬† Packages: Quick Start",
    "section": "4.17 Other random notes",
    "text": "4.17 Other random notes\n\n4.17.1 Get rid of .DS_Store\nThe .DS_Store file can be an annoyance when working with Git on MacOS. Here is a link to instructions for removing .DS_Store from your repository. Do it early and never worry about it again.\nIn the terminal, run the following code from the root directory:\n\n# Remove existing files from the repository:\nfind . -name \"*.DS_Store\" -type f -exec git-rm {} \\;\n\n\n# Add .DS_Store to .gitignore\necho .DS_Store &gt;&gt; .gitignore\n\n\n# Commit the file to the repo\ngit add .gitignore\ngit commit -m '.DS_Store banished!'\n\n\n\n4.17.2 File mode changes\nWhen working on Epi III ‚Äì and I think this could be an issue with using git on OneDrive more generally ‚Äì I would have to recommit files when I changed computers. Not because the content of the file had changed, but because something called the file mode had changed. I searched SO and seemed to fix it with this post: https://stackoverflow.com/questions/1580596/how-do-i-make-git-ignore-file-mode-chmod-changes\nOpen terminal and type:\n\ngit config core.fileMode false\n\n\n\n4.17.3 Icon files\nAnother issue I encountered when working on Epi III ‚Äì and I think this could be an issue with using git on OneDrive more generally ‚Äì was the existence of these ‚ÄúIcon‚Äù files every time I switched computers. However, they didn‚Äôt seem to actually exist (or at least they weren‚Äôt visible), and ignoring them in the usual way did not seem to actually ignore them. I searched SO and seemed to fix it with this post: https://stackoverflow.com/questions/17556250/how-to-ignore-icon-in-git\nOpen terminal and type:\n\nprintf \"Icon\\r\\r\" &gt;&gt; .gitignore",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/packages_quick_start/packages_quick_start.html#errors-warnings-notes",
    "href": "chapters/packages_quick_start/packages_quick_start.html#errors-warnings-notes",
    "title": "4¬† Packages: Quick Start",
    "section": "4.18 Errors, warnings, notes",
    "text": "4.18 Errors, warnings, notes\nBelow are some common errors, warnings and notes I‚Äôve encountered during build tests.\n\nW checking for unstated dependencies in examples ‚Ä¶ ‚Äòlibrary‚Äô or ‚Äòrequire‚Äô call not declared from: ‚Äòtidyverse‚Äô E checking examples (707ms) Running examples in ‚Äòfreqtables-Ex.R‚Äô failed The error most likely occurred in:\n\nI got this error because I had library(tidyverse) in theexamples? section of my roxygen2 header in one of my R scripts, but I did not have tidyverse in the Imports section of my DESCRIPTION file. I could add tidyverse to the DESCRIPTION file (usethis::use_package(\"tidyverse\", type = \"Imports\")). However, in this case I chose to use library(dplyr), which was already in the Imports section of my DESCRIPTION file, instead.\n\nW checking dependencies in R code (369ms) ‚Äò::‚Äô or ‚Äò:::‚Äô import not declared from: ‚Äòrlang‚Äô\n\nTo fix this one simply run the following code in the console: usethis::use_package(\"rlang\", type = \"Imports\")\n\nWarning: ‚Äòinst/doc‚Äô files ‚Ä¶ ignored as vignettes have been rebuilt.\n\nJust ignore this one.\n\nWarning in strptime(xx, f &lt;- ‚Äú%Y-%m-%d %H:%M:%OS‚Äù, tz = tz) : unknown timezone ‚Äòzone/tz/2017c.1.0/zoneinfo/America/Chicago‚Äô\n\nJust ingnore this one. It‚Äôs a problem with my computer, not with the package code.\n\nNon-standard files/directories found at top level: ‚Äòdevelop_test_table.Rmd‚Äô ‚Äòdevelop_test_table.nb.html‚Äô\n\nNeed to delete these files when I‚Äôm done developing chi-square test.\n\nPrevents R CMD check: ‚Äúno visible binding for global variable ‚Äò.‚Äô‚Äù\n\nPut the following (for example) directly inside the function definition in the R script where the function is defined:\n\n# ------------------------------------------------------------------\n# Prevents R CMD check: \"no visible binding for global variable ‚Äò.‚Äô\"\n# ------------------------------------------------------------------\nn = n_total = prop = t_crit = se = lcl_wald = ucl_wald = percent = NULL\n\n\nN checking R code for possible problems (1.8s) get_group_n: no visible global function definition for ‚Äò%&gt;%‚Äô Undefined global functions or variables: %&gt;%\n\nInfo on fixing this issue\nShort answer: Add the following directly inside the roxygen2 header in the R script where the function is defined: @importFrom dplyr %&gt;%. You must also make sure that it gets to the NAMESPACE. Run usethis::use_namespace() and then devtools::document() to get it into NAMESPACE.\n\nNon-standard file/directory found at top level: ‚Äòmeantables_hex‚Äô\n\nI got this error after submitting meantables to CRAN. The problem is with the hex sticker file in the meantable hex sticker I added for the README. This SO issue gives some advice: https://stackoverflow.com/questions/44113759/note-or-warning-from-package-check-when-readme-md-includes-images\nI moved the stickers to man/figures. It seems to have solved the problem.\n\n\n\n\n1. Wickham H, Bryan J. R Packages. second.; 2022.",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Packages: Quick Start</span>"
    ]
  },
  {
    "objectID": "chapters/stata/stata.html",
    "href": "chapters/stata/stata.html",
    "title": "5¬† Stata",
    "section": "",
    "text": "While working on the L2C main outcomes paper, I wanted to double check some of my results in Stata. It turns out you can run Stata code directly from within R; albeit with some limitations. This note needs some work, but the basics are here.\nThe first thing we need to do is load the RStata package.\n\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(RStata) # For Stata\n\nThen, we need to tell R where to find Stata on our local computer and which version of Stata we are using.\n\n# For Stata\noptions(\"RStata.StataPath\" = \"/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp\")\noptions(\"RStata.StataVersion\" = 18)\n\nThen, we can run Stata directly in R code chunks in RStudio. For example, let‚Äôs calculate the frequency and percentage of observations of each cylinder type in the mtcars data set.\n\nPass a Stata command (as a character string) ‚Äì or a do file ‚Äì to the src argument of the stata() function.\nPass the name of a data frame that currently exists in the R global environment to the data.in argument of the stata() function.\n\n\nstata(\n  src = \"tabulate cyl\",\n  data.in = mtcars\n)\n\n. tabulate cyl\n\n        cyl |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          4 |         11       34.38       34.38\n          6 |          7       21.88       56.25\n          8 |         14       43.75      100.00\n------------+-----------------------------------\n      Total |         32      100.00\n\n\nThis works, but we can‚Äôt use these estimates directly. However, we can save the estimation results and use them in further operations. See this SO post for more discussion.\n\n# Create a temp file to save the results to.\n# I don't want to create a dta file on my desktop every time I build this book.\ntmpdir &lt;- tempfile()\ndir.create(tmpdir, showWarnings = FALSE, recursive = TRUE)\ntempfile &lt;- file.path(tmpdir, \"stata_out.dta\")\n\n\nstata_tabulate_results &lt;- stata(\n  paste0( # Using past to inject the temp file. Normally this isn't necessary\n    '\n    tabulate cyl, matcell(x)\n    clear\n    svmat x\n    ',\n    'save ', tempfile\n  ),\n  data.in = mtcars,\n  data.out = TRUE\n)\n\n. \n.     tabulate cyl, matcell(x)\n\n        cyl |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          4 |         11       34.38       34.38\n          6 |          7       21.88       56.25\n          8 |         14       43.75      100.00\n------------+-----------------------------------\n      Total |         32      100.00\n.     clear\n.     svmat x\nnumber of observations will be reset to 3\nPress any key to continue, or Break to abort\nNumber of observations (_N) was 0, now 3.\n.     save /var/folders/_6/rzs6b7fd09d1_4sw4vyrw8900000gs/T//Rtmp1JXCEK/file144\n&gt; d11c6609ce/stata_out.dta\nfile\n    /var/folders/_6/rzs6b7fd09d1_4sw4vyrw8900000gs/T//Rtmp1JXCEK/file144d11c6\n    &gt; 609ce/stata_out.dta saved\n\n\nWithout the tempfile code, it would look like this.\n\nstata_tabulate_results &lt;- stata(\n  '\n  tabulate cyl, matcell(x)\n  clear\n  svmat x\n  save \"/Users/bradcannell/Desktop/t.dta\"\n  ',\n  data.in = mtcars,\n  data.out = TRUE\n)\n\nI still have a lot to learn about saving the results from Stata commands. In the future, we may want to add notes from ‚Äú/Users/bradcannell/Library/CloudStorage/Dropbox/Stata/Notes/Example Do Files/Matrix and Saved Results.do‚Äù",
    "crumbs": [
      "Programming",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Stata</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html",
    "href": "chapters/google_sheets/google_sheets.html",
    "title": "6¬† Google Sheets",
    "section": "",
    "text": "6.1 Load packages\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(googlesheets4, warn.conflicts = FALSE)\nlibrary(googledrive, warn.conflicts = FALSE)",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#sheet-id",
    "href": "chapters/google_sheets/google_sheets.html#sheet-id",
    "title": "6¬† Google Sheets",
    "section": "6.2 Sheet ID",
    "text": "6.2 Sheet ID\nSave the sheet id for use below. You can pull it from the sheet‚Äôs URL. For example, the sheet id for the budget app is: 1153fK76wz8cu4URFM7eidlyv8AEUoSKAAIt-q6uH0ZE. It is taken from the budget app‚Äôs url, which is: https://docs.google.com/spreadsheets/d/1153fK76wz8cu4URFM7eidlyv8AEUoSKAAIt-q6uH0ZE/edit#gid=1694905897\n\nbudget_app_id &lt;- \"1153fK76wz8cu4URFM7eidlyv8AEUoSKAAIt-q6uH0ZE\"",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#view-google-sheet",
    "href": "chapters/google_sheets/google_sheets.html#view-google-sheet",
    "title": "6¬† Google Sheets",
    "section": "6.3 View Google Sheet",
    "text": "6.3 View Google Sheet\nView the Google Sheet in the browser (optional). The code below isn‚Äôt run.\n\ngs4_browse(budget_app_id)",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#import",
    "href": "chapters/google_sheets/google_sheets.html#import",
    "title": "6¬† Google Sheets",
    "section": "6.4 Import",
    "text": "6.4 Import\nNow, we will import a Google Sheet.\n\nentities &lt;- read_sheet(ss = budget_app_id, sheet = \"Entities\")\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  &lt;https://gargle.r-lib.org/articles/non-interactive-auth.html&gt;\n\n\n‚Ñπ The googlesheets4 package is using a cached token for\n  'brad.cannell@gmail.com'.\n\n\n‚úî Reading from \"Budget App Prototype\".\n\n\n‚úî Range ''Entities''.\n\n\nThe first time you run this code, you will have to authorize the package to access your Google Drive.\n\n\n\n\n\nThe first time you run this code, you will have to authorize the package to access your Google Drive.\n\n\n\n\nNext, you will have to select the Google account you want to give the Tidyverse API Packages authorization to access. Then, you will need to make sure to click the checkbox that gives the Tidyverse API Packages authorization to ‚Äúsee, edit, create, and delete all your Google Sheets spreadsheets.‚Äù\n\n\n\n\n\nClick the checkbox that gives the Tidyverse API Packages authorization to ‚Äúsee, edit, create, and delete all your Google Sheets spreadsheets.‚Äù\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nMAKE SURE TO CLICK THE CHECKBOX. Don‚Äôt just hit continue.\n\n\nAfter clicking the checkbox, click Continue. After doing so, you should be able to close the browser window and run the code without issue. If there is an issue, try restarting the R session and going through the authorization process again.\nAlternatively, we can use the googledrive package and the sheet‚Äôs name to import the sheet into our R session.\n\nentities &lt;- drive_get(\"Budget App Prototype\") |&gt;\n  read_sheet(\"Entities\")\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  &lt;https://gargle.r-lib.org/articles/non-interactive-auth.html&gt;\n\n\n‚Ñπ The googledrive package is using a cached token for 'brad.cannell@gmail.com'.\n\n\n‚úî The input `path` resolved to exactly 1 file.\n\n\n‚úî Reading from \"Budget App Prototype\".\n\n\n‚úî Range ''Entities''.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe first time you use the googledrive package, you will have to go through the authorization process described above.",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#metadata",
    "href": "chapters/google_sheets/google_sheets.html#metadata",
    "title": "6¬† Google Sheets",
    "section": "6.5 Metadata",
    "text": "6.5 Metadata\nIt is also possible to optionally view metadata about the sheet.\n\ngs4_get(budget_app_id)\n\n\n‚îÄ‚îÄ &lt;googlesheets4_spreadsheet&gt; ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n Spreadsheet name: \"Budget App Prototype\"                      \n               ID: 1153fK76wz8cu4URFM7eidlyv8AEUoSKAAIt-q6uH0ZE\n           Locale: en_US                                       \n        Time zone: America/Mexico_City                         \n      # of sheets: 13                                          \n# of named ranges: 26                                          \n\n‚îÄ‚îÄ &lt;sheets&gt; ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n        (Sheet name): (Nominal extent in rows x columns)\n 'Development NOTES': 992 x 2\n'Dev Test Functions': 50507 x 26\n             'Lists': 1007 x 27\n     'Dev Bills Due': 1007 x 28\n              'Owed': 1000 x 26\n            'Income': 1000 x 26\n          'Entities': 1000 x 26\n          'Accounts': 50522 x 32\n    'PaymentPeriods': 1000 x 27\n     'InterestRates': 1000 x 27\n   'PaymentAccounts': 1000 x 27\n    'PaymentMethods': 1000 x 27\n     'USAA Checking': 1000 x 26\n\n‚îÄ‚îÄ &lt;named ranges&gt; ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n                 (Named range): (A1 range)       \n          'account_categories': 'Lists'!D10:D34  \n'account_subcat_personal_care': 'Lists'!D145:D147\n   'account_pay_period_manual': 'Lists'!E10:E13  \n       'account_subcat_travel': 'Lists'!D188:D191\n               'account_types': 'Lists'!C10:C11  \n          'account_subcat_edu': 'Lists'!D55:D57  \n          'account_subcat_ent': 'Lists'!D59:D64  \n     'account_subcat_transfer': 'Lists'!D186:D186\n         'account_subcat_food': 'Lists'!D76:D80  \n        'account_subcat_bills': 'Lists'!D47:D51  \n        'account_subcat_gifts': 'Lists'!D82:D83  \n         'account_subcat_auto': 'Lists'!D38:D45  \n    'account_subcat_financial': 'Lists'!D73:D74  \n         'account_subcat_pets': 'Lists'!D164:D167\n         'account_subcat_home': 'Lists'!D94:D102 \n        'account_subcat_taxes': 'Lists'!D177:D184\n  'account_subcat_investments': 'Lists'!D104:D131\n          'account_cat_health': 'Lists'!D85:D92  \n                'entity_types': 'Lists'!B10:B15  \n       'account_subcat_income': 'Lists'!D149:D162\n     'account_subcat_shopping': 'Lists'!D169:D173\n        'account_subcat_loans': 'Lists'!D139:D143\n         'account_subcat_kids': 'Lists'!D133:D137\n         'account_subcat_fees': 'Lists'!D66:D71  \n                      'months': 'Lists'!A10:A21  \n'account_subcat_subscriptions': 'Lists'!D175:D175",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#properties",
    "href": "chapters/google_sheets/google_sheets.html#properties",
    "title": "6¬† Google Sheets",
    "section": "6.6 Properties",
    "text": "6.6 Properties\nIt is also possible to optionally view properties of the sheet.\n\nsheet_properties(budget_app_id)\n\n# A tibble: 13 √ó 8\n   name               index       id type  visible grid_rows grid_columns data  \n   &lt;chr&gt;              &lt;int&gt;    &lt;int&gt; &lt;chr&gt; &lt;lgl&gt;       &lt;int&gt;        &lt;int&gt; &lt;list&gt;\n 1 Development NOTES      0   1.38e8 GRID  TRUE          992            2 &lt;NULL&gt;\n 2 Dev Test Functions     1   1.64e9 GRID  TRUE        50507           26 &lt;NULL&gt;\n 3 Lists                  2   3.79e7 GRID  TRUE         1007           27 &lt;NULL&gt;\n 4 Dev Bills Due          3   1.70e9 GRID  TRUE         1007           28 &lt;NULL&gt;\n 5 Owed                   4   6.85e8 GRID  TRUE         1000           26 &lt;NULL&gt;\n 6 Income                 5   9.24e8 GRID  TRUE         1000           26 &lt;NULL&gt;\n 7 Entities               6   1.25e8 GRID  TRUE         1000           26 &lt;NULL&gt;\n 8 Accounts               7   1.69e9 GRID  TRUE        50522           32 &lt;NULL&gt;\n 9 PaymentPeriods         8   1.37e9 GRID  TRUE         1000           27 &lt;NULL&gt;\n10 InterestRates          9   1.04e9 GRID  TRUE         1000           27 &lt;NULL&gt;\n11 PaymentAccounts       10   1.27e9 GRID  TRUE         1000           27 &lt;NULL&gt;\n12 PaymentMethods        11   2.40e8 GRID  TRUE         1000           27 &lt;NULL&gt;\n13 USAA Checking         12   7.69e7 GRID  TRUE         1000           26 &lt;NULL&gt;",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/google_sheets/google_sheets.html#add-data-to-sheets",
    "href": "chapters/google_sheets/google_sheets.html#add-data-to-sheets",
    "title": "6¬† Google Sheets",
    "section": "6.7 Add data to sheets",
    "text": "6.7 Add data to sheets\nIn the example below, we will add new data to the entities sheet.\n\n6.7.1 Method 1: Add data locally and then write to Google Sheets\n\nentities_update &lt;- entities |&gt;\n  add_row(pk_entity = 999, entity_name = \"Test\")\n\nNow, write the updates back to Google Sheets.\n\nsheet_write(entities_update, budget_app_id, sheet = \"Test\")\n\n‚úî Writing to \"Budget App Prototype\".\n\n\n‚úî Writing to sheet 'Test'.\n\n\nIt worked. Now, delete the test sheet.\n\nsheet_delete(budget_app_id, \"Test\")\n\n‚úî Deleting 1 sheet from \"Budget App Prototype\":\n\n\n‚Ä¢ 'Test'\n\n\n\n\n6.7.2 Method 2: Add directly to Google Sheets (almost like a database)\n\nentities_empty &lt;- slice(entities, 0)\nentities_update &lt;- entities_empty |&gt;\n  add_row(pk_entity = 999, entity_name = \"Test\")\n\nAppend to Google Sheet\n\nsheet_append(budget_app_id, entities_update, sheet = \"Entities\")\n\n‚úî Writing to \"Budget App Prototype\".\n\n\n‚úî Appending 1 row to 'Entities'.\n\n\nIt worked! Now, delete the test row.\n\nrange_delete(budget_app_id, sheet = \"Entities\", range = \"30\", shift = NULL)\n\n‚úî Editing \"Budget App Prototype\".\n\n\n‚úî Deleting cells in sheet 'Entities'.\n\n\nOne thing I think I like about this method is that I can read/write data to/from R/Shiny, but I can also still easily interact with the data directly in Google Sheets.",
    "crumbs": [
      "Working with External Files",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Google Sheets</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html",
    "href": "chapters/officer/officer.html",
    "title": "7¬† Officer",
    "section": "",
    "text": "7.1 ‚≠êÔ∏èOverview\nI don‚Äôt have time to do this right today, but I do make some good notes on using officer.\nGood examples to check out:\nAt least until you figure out make files, I think the best thing to do is save tables and figures as files in the docs folder. Create a single R script to compile them all together and create the report. Use comments to specify what file the table/figure is created in.\nStill trying to figure out if it‚Äôs better to write text in Word and then add in tables and charts with bookmarks, or is it better to write everything in R?\nIn general, it seems helpful/expedient to do as much of the prose and formatting as possible directly in the Word template. Then, just add numbers, tables, and graphs from R with bookmarks.",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#overview",
    "href": "chapters/officer/officer.html#overview",
    "title": "7¬† Officer",
    "section": "",
    "text": "LEAD panel monthly report.\n\nSun Study report.\n\nstroke study -&gt; table_characteristics_by_network.Rmd.\n\nL2C quarterly reports.\n\nL2C Distress Tolerance Scale Paper\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWhen editing the code chunks below, you will need to add ‚Äú../../‚Äù in front of file paths that retrieve Word docs from or save word docs to the examples folder if you want them to work when you run them interactively. For example, ‚Äú../../examples/Word Template for Officer.docx‚Äù. However, you have to delete the ‚Äú../../‚Äù from the file paths in order for build book to work.",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#useful-websites",
    "href": "chapters/officer/officer.html#useful-websites",
    "title": "7¬† Officer",
    "section": "7.2 üåéUseful websites",
    "text": "7.2 üåéUseful websites\n\nhttps://stackoverflow.com/",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#load-packages",
    "href": "chapters/officer/officer.html#load-packages",
    "title": "7¬† Officer",
    "section": "7.3 üì¶Load packages",
    "text": "7.3 üì¶Load packages\n\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(officer, warn.conflicts = FALSE)\nlibrary(flextable, warn.conflicts = FALSE)",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#formatted-text",
    "href": "chapters/officer/officer.html#formatted-text",
    "title": "7¬† Officer",
    "section": "7.4 Formatted text",
    "text": "7.4 Formatted text\nCan start with a template\n\ndoc &lt;- read_docx(\"officer_word_template.docx\")\n\nOr not\n\ndoc &lt;- read_docx() |&gt;\n  body_add_par(\"DETECT LEAD Panel Initial Review Report\", style = \"heading 1\") |&gt;\n  body_add_par(paste(\"Updated: \", Sys.Date())) |&gt;\n  body_add_par(\"\") |&gt;\n  body_add_fpar(\n    fpar(\n      ftext(\n        \"Total Initial Assessments:\",\n        prop = fp_text(\n          font.family = \"Times New Roman\", font.size = 11\n        )\n      )\n    )\n  )\n\n\nprint(\n  doc, \n  \"officer_formatted_text.docx\"\n)\n\nLink to Word Document on Dropbox\n\n# Output Word document\n# Update the year and month in the file name dynamically\nprint(\n  doc, \n  paste(Sys.Date() |&gt; format(\"%Y-%m\"), \" Initial Review Report.docx\")\n)",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#bulleted-list",
    "href": "chapters/officer/officer.html#bulleted-list",
    "title": "7¬† Officer",
    "section": "7.5 Bulleted list",
    "text": "7.5 Bulleted list\nIt‚Äôs possible to do. You need to make sure you create a bullet style in the template Word doc.\nSee here: https://github.com/davidgohel/officer/issues/262\n\n#  Create Word doc\nss_report &lt;- read_docx(\"officer_word_template.docx\") |&gt;\n  body_add_par(\"Sun Study Outcomes Report\", style = \"heading 1\") |&gt; \n  body_add_par(\"\\n\") |&gt; \n  body_add_par(paste(\"Updated: \", Sys.Date())) |&gt; \n  body_add_par(\"\\n\") |&gt; \n  \n  # Add bulleted list\n  body_add_par(\"item 1\", style = \"bullet\") |&gt;\n  body_add_par(\"item 2\", style = \"bullet\") |&gt;\n  body_add_par(\"item 3\", style = \"bullet\")\n\n\n# Output Word document\nprint(\n  ss_report, \n  \"officer_bullets.docx\"\n)\n\nLink to Word Document on Dropbox",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#adding-on-to-the-end-of-a-file.",
    "href": "chapters/officer/officer.html#adding-on-to-the-end-of-a-file.",
    "title": "7¬† Officer",
    "section": "7.6 Adding on to the end of a file.",
    "text": "7.6 Adding on to the end of a file.\nFrom the Sun Study. Need to clean up when I get time.\nStart with the same document we just made above.\n\n#  Create Word doc\nss_report_end &lt;- read_docx(\"officer_word_template.docx\") |&gt;\n  body_add_par(\"Sun Study Outcomes Report\", style = \"heading 1\") |&gt; \n  body_add_par(\"\\n\") |&gt; \n  body_add_par(paste(\"Updated: \", Sys.Date())) |&gt; \n  body_add_par(\"\\n\")\n\n\n# Output Word document\nprint(\n  ss_report_end, \n  \"officer_bullets_end.docx\"\n)\n\nLink to Word Document on Dropbox\nNow add a new section to the document.\nSection 1. Report on missing data\n\n# Load report and add to the end?\nss_report_end &lt;- read_docx(\"officer_bullets_end.docx\") |&gt;\n  body_add_par(\"Test Text\")\n\n\n# Output Word document\nprint(\n  ss_report_end, \n  \"officer_bullets_end.docx\"\n)\n\nLink to Word Document on Dropbox\nThis works. However, there was no advantage to doing it this way in the Sun Study example. In fact, what I‚Äôve found in general is that it typically works best to do as much adding text and formatting things as possible directly in the Word template. Then, just pretty much add flextables and plots to the Word template.",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  },
  {
    "objectID": "chapters/officer/officer.html#using-bookmarks",
    "href": "chapters/officer/officer.html#using-bookmarks",
    "title": "7¬† Officer",
    "section": "7.7 Using bookmarks",
    "text": "7.7 Using bookmarks\nWriting everything in an R script and then compiling to a Word document works alright, but wrapping everything in officer functions makes it hard to read. In this section, I‚Äôm seeing if I can type all the narrative in the Word template, then just add tables and figures into the Word template at bookmarks.\nWebsite about bookmarks: https://davidgohel.github.io/officer/reference/body_replace_text_at_bkm.html\nHave to create this with point and click in Word: http://howtomicrosoftofficetutorials.blogspot.com/2017/03/use-bookmarks-in-word-2016-for-mac.html\nUse Insert &gt; Links &gt; Bookmark\n\n7.7.1 Replacing bookmarks with text\nHere, we update a ‚Äúdate‚Äù bookmark with today‚Äôs date.\n\ndoc_w_bookmarks &lt;- read_docx(\"officer_word_template_bookmarks.docx\") |&gt; \n  body_replace_text_at_bkm(\"date\", as.character(Sys.Date()))\n\nprint(\n  doc_w_bookmarks,\n  \"officer_bookmarks.docx\"\n)\n\nLink to Word Document on Dropbox\n\n\n\n\n\n\nWarning\n\n\n\nOriginally, I had the ‚Äúadd date‚Äù example code in this script below the ‚Äúadd table‚Äù and ‚Äúadd figure‚Äù code, and it didn‚Äôt work. It didn‚Äôt produce a warning either. The ‚Äúdate‚Äù bookmark just wasn‚Äôt replaced with the date value in officer_bookmarks.docx. Moving the code chunk up to be before the table and the figure fixed the problem. I‚Äôm not sure, but we may have to replace bookmarks in the order they appear in the Word document.\n\n\n\n\n7.7.2 Replacing bookmarks with flextables\n\ndoc_w_bookmarks &lt;- doc_w_bookmarks |&gt; \n  body_replace_flextable_at_bkm(\n    bookmark = \"example_table\",\n    value = flextable(head(mtcars))\n  )\n\nprint(\n  doc_w_bookmarks,\n  \"officer_bookmarks.docx\"\n)\n\nLink to Word Document on Dropbox\n\n\n\n\n\n\nWarning\n\n\n\nIf you don‚Äôt add other text around the bookmark, you will get this error: Error: bookmark 'example_table' does not end in the same paragraph (or is on the whole paragraph). A hacky fix is to enclose bookmark text with &lt;bm&gt; text &lt;bm&gt;. Make sure only the ‚Äútext‚Äù part is the bookmark.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nI also found that you can‚Äôt continue piping the document after you‚Äôve added a flextable at a bookmark. You have to start overwriting the Word document object. See LEAD Panel Summary Report as an example. After figuring this out, I think it makes more sense to write text directly in Word and use bookmarks only to replace tables and figures in many cases.\n\n\n\n\n7.7.3 Replacing bookmarks with images\n\n\n\n\n\n\nNote\n\n\n\nFor ggplot graphs, it looks like you need to use ggsave() to save the plot as an image file. Then, use the image file as the value to body_replace_img_at_bkm()\n\n\n\n\n\n\n\n\nWarning\n\n\n\nDon‚Äôt forget to use external_img() when replacing bookmarks with images.\n\n\nFor images, just add the bookmark to the end of the title without surrounding it with ‚Äúbm‚Äù. For example, ‚ÄúFigure 1. Overall trend in sunscreen application outcomes by study p_overall‚Äù Where ‚Äúp_overall is the bookmark. Otherwise, the‚Äùbm‚Äù will still be there.\nFor best results, the width and height used in ggsave() should match the width and height in external_img(). Deciding on the correct width and height might take some trial and error.\nExample from L2C quarterly report:\n\ndoc_w_bookmarks &lt;- doc_w_bookmarks |&gt; \n  body_replace_img_at_bkm(\n    \"example_figure\", \n    external_img(\"fig_1.jpeg\", width = 7, height = 4) # Don't forget to use external_img()\n  )\n\nprint(\n  doc_w_bookmarks,\n  \"officer_bookmarks.docx\"\n)\n\nLink to Word Document on Dropbox\n\n\n7.7.4 Embedding cells form one table into cells of an existing Word tables at a bookmark with flextable and officer\nPosting on Stack Overflow ‚Äì Update when you have a solution\nIn Word, it is possible to copy and paste a subsection of one table into another table. For example, if I have the two Word tables below, I can copy column 2, rows 2-5 from the first table and paste them into column 2, rows 4-7 in the second table.\n\n\n\n\n\n\n\n\n\nI can highlight the cells that I want to copy in the first table and and paste them into the cells of the second table.\n\n\n\n\n\n\n\n\n\nI‚Äôm wondering if there is a programmatic way to do the same operation with flextable and officer. It‚Äôs probably worth mentioning the following to parameters:\n\nCreating the second table from scratch with the values from the first table included won‚Äôt work for my problem ‚Äì or at least it‚Äôs a solution that I‚Äôm trying to avoid.\nAdd the values from the first table to the cells of the second table one at a time with bookmarks won‚Äôt work for my problme ‚Äì or at least it‚Äôs a solution that I‚Äôm trying to avoid.\n\nI‚Äôve tried the following potential solutions so far. They all begin with the following template Word document with bookmarks embedded in the table.\nAdditionally, here is the code I‚Äôm using to create the ‚ÄúFirst table‚Äù example data.\n\nfirst_table &lt;- tibble(\n  n_items = 1:4,\n  n = c(100, 40, 20, 5)\n)\n\n\n7.7.4.1 Method 1: Add values to a bookmark in the second table\n\n\n\n\n\n\n\n\n\nStart by reading in the Word template document.\nThen, I tried adding the values from first_table to the bookmark in the second table.\n\ndoc &lt;- doc |&gt; \n  body_replace_text_at_bkm(\n    \"bm_add_rows_01\", \n    first_table |&gt; pull(n) |&gt; as.character()\n  )\n\nError in body_replace_text_at_bkm(doc, \"bm_add_rows_01\", as.character(pull(first_table, : is_scalar_character(value) is not TRUE\n\n\nThat code results in the following error:\nError in body_replace_text_at_bkm(., \"bm_add_rows_01\", first_table |&gt; : \nis_scalar_character(value) is not TRUE\nSo, I can‚Äôt add a vector of values to the bookmark.\n\n\n7.7.4.2 Method 2: Add a single-column flextable to a bookmark in the second table\nTo do this, I need to first coerce first_table into a single-column flextable object.\n\nfirst_table_ft &lt;- first_table |&gt; \n  select(n) |&gt; \n  flextable() |&gt; \n  delete_part(\"header\") |&gt; \n  border_remove()\n\nThen, add the single-column flextable to the bookmark in the second table.\n\ndoc &lt;- doc |&gt; \n  body_replace_flextable_at_bkm(\"bm_add_rows_01\", first_table_ft)\n\n\nprint(\n  doc, \n  \"embedding_flextables.docx\"\n)\n\nThat returns the following result ‚Äì a four-row table embedded into a single cell of the second table. This result makes sense, but it isn‚Äôt the result I‚Äôm attempting to achieve.\n\n\n\n\n\n\n\n\n\n\n\n7.7.4.3 Method 3: Add a single-column flextable to a bookmark in the second table with cells merged vertically\nFor my third attempt, I tried adding the bookmark to the second table with rows 4-7 merged in column 2.\n\n\n\n\n\n\n\n\n\nThen, adding the single-column flextable to the bookmark in the second table as before.\n\nprint(\n  doc, \n  \"embedding_flextables.docx\"\n)\n\nWhich again returns a result that isn‚Äôt quite what I‚Äôm looking for.\n\n\n\n\n\n\n\n\n\nAny solutions and/or constructive feedback is appreciated!",
    "crumbs": [
      "Presenting Results",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Officer</span>"
    ]
  }
]